---
# tasks file for ansible-role-dotfiles

- name: Run the equivalent of "pacman -Sy" before installing vim
  pacman:
    update_cache: yes
  become: yes
  when: ansible_os_family == 'Archlinux'

- name: Install vim with pacman
  pacman:
    name: vim
    state: present
  become: yes
  when: ansible_os_family == 'Archlinux'

- name: Install vim plugins with Vundle
  # Must use the "--not-a-term" flag or vim will print
  # "warning: Output is not to a terminal".
  shell: vim +PluginInstall +qall --not-a-term > /dev/null

- name: Install zsh with pacman
  pacman:
    name: zsh
    state: present
  become: yes
  when: ansible_os_family == 'Archlinux'

- name: Clone oh-my-zsh git repository
  git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: "{{ zsh_ohmyzsh }}"

- name: Clone powerlevel9k oh-my-zsh theme
  git:
    repo: https://github.com/bhilburn/powerlevel9k.git
    dest: "{{ zsh_custom }}/themes/powerlevel9k"

- name: Create symlink for powerlevel9k oh-my-zsh theme
  file:
    src: "{{ zsh_custom }}/themes/powerlevel9k/powerlevel9k.zsh-theme"
    dest: "{{ zsh_custom }}/themes/powerlevel9k.zsh-theme"
    state: link
    force: yes

- name: Clone spaceship-prompt oh-my-zsh theme
  git:
    repo: https://github.com/denysdovhan/spaceship-prompt.git
    dest: "{{ zsh_custom }}/themes/spaceship-prompt"

- name: Create symlink for spaceship-prompt oh-my-zsh theme
  file:
    src: "{{ zsh_custom }}/themes/spaceship-prompt/spaceship.zsh-theme"
    dest: "{{ zsh_custom }}/themes/spaceship.zsh-theme"
    state: link
    force: yes

- name: Clone dotfiles repository
  git:
    repo: 'https://github.com/patkaehuaea/dotfiles.git'
    dest: "{{ dotfiles_src }}"

  # Loop through dotfiles repository and create directories
  # and symlinks to match filetree. Choosing to loop
  # instead of managing separately.

- name: Create directories
  file:
    path: "{{ user_home }}/{{ item.path }}"
    state: directory
    mode: '{{ item.mode }}'
  with_filetree: "{{ dotfiles_src }}/homedir"
  when: item.state == 'directory'

- name: Create symlinks
  file:
    src: '{{ item.src }}'
    dest: '{{ user_home }}/{{ item.path }}'
    owner: "{{ ansible_user_id }}"
    group: "{{ user_group }}"
    mode: '{{ item.mode }}'
    state: link
    force: yes
  with_filetree: "{{ dotfiles_src }}/homedir"
  when: item.state == 'file'

- name: Change shell for user running playbook to zsh
  user:
    name: "{{ ansible_user_id }}"
    shell: /bin/zsh
